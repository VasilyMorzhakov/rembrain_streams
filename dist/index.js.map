{"version":3,"file":"index.js","sources":["../src/streams/WsHOC.tsx","../src/streams/ReactRgbStream.tsx","../src/streams/ReactResponsiveRgbStream.tsx","../src/image/RembrainImage.tsx","../src/web-operators/entities.ts","../src/web-operators/image-receiver.ts","../src/web-operators/network-operator.ts","../src/web-operators/commands/command-base.ts","../src/web-operators/commands/command-goto.ts","../src/web-operators/commands/command-set-tag.ts","../src/web-operators/commands/command-wait-for-idle.ts","../src/web-operators/commands/command-set-joints.ts","../src/web-operators/operator-canvas.tsx","../src/web-operators/operator-debug.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {Buffer} from \"buffer/\"\n\nexport const WsHOC = (Canvas) => ({\n    isOn=true,\n    token,\n    websocketURL,\n    robotName,\n    exchange=\"rgbjpeg\",\n    handleError=(error:any) => {console.log({error})},\n    ...props\n  }) => {\n    \n    const [image, setImage] = useState(new Image())\n    const [websocket, setWebsocket] = useState<WebSocket|undefined>(undefined)\n\n    const connectWebsocket = () => {\n        if (websocket !== undefined) {\n          websocket.onopen = () => {\n            let controlPacket = {\n              command: 'pull',\n              exchange: exchange,\n              accessToken: token,\n              robot_name: robotName\n            }\n            websocket.send(JSON.stringify(controlPacket))\n          }\n\n          websocket.onmessage = async (ev) => {\n            try {\n              const { data } = ev\n              const dataType = new Uint8Array(await data.slice(0, 1).arrayBuffer())[0]\n              \n              if (dataType === 2) {\n                let lengths = new Uint32Array(\n                  await data.slice(1, 13).arrayBuffer()\n                );\n                let jpgBlob = data.slice(9, 9 + lengths[0]);\n                \n                jpgBlob.arrayBuffer().then((val: ArrayBuffer) => {\n                  var imData = {\n                    data: Buffer.from(val),\n                    type: 'image/jpg'\n                  }\n                  const newImg = new Image()\n                  const buf = imData.data.toString('base64')\n                  newImg.src = `data:${imData.type};base64,` + buf\n                  newImg.onload = () => {\n                    setImage(newImg)\n                  }\n                })\n              } else if (dataType === 1){      \n                const HEADER_END = 13\n                let lengths = new Uint32Array(\n                  await data.slice(1, HEADER_END).arrayBuffer()\n                )\n                let imageBlob = data.slice(HEADER_END, HEADER_END + lengths[0])\n                imageBlob.arrayBuffer().then(\n                  (val) => {\n                    let imData = {\n                      data: Buffer.from(val),\n                      type: 'image/jpg'\n                    }\n                    const newImg = new Image()\n                    const buf = imData.data.toString('base64')\n                    newImg.src = `data:${imData.type};base64,` + buf\n                    newImg.onload = () => {\n                      setImage(newImg)\n                    }\n                  }\n                )\n              }\n            } catch (e) {\n              handleError(ev.data)\n            }\n          }\n          websocket.onclose = (ev) => {\n            console.log('Socket is closed. Reconnect will be attempted.', ev.reason)\n            if (ev.reason !== 'stay down') {\n              connectWebsocket()\n              setWebsocket(new WebSocket(websocketURL))\n            } else {\n              setWebsocket(undefined)\n            }\n          }\n          websocket.onerror = (ev) => {\n            handleError(ev)\n          }\n        }\n      }\n\n      useEffect(() => {\n        websocket && connectWebsocket()\n      }, [websocket])\n\n      useEffect(() => {\n        websocket && websocket.close(1000, \"stay down\")\n        if (!isOn) {\n          setWebsocket(undefined)\n          setImage(new Image())\n        } else {\n          setWebsocket(new WebSocket(websocketURL))\n        }\n      }, [robotName, exchange, token, isOn])\n\n    return <Canvas image={image} {...props}/>    \n}","import React, { useEffect, useRef } from 'react'\nimport { WsHOC } from './WsHOC'\n\nconst ReactRgbStream = ({\n  posX = 0,\n  posY = 0,\n  width,\n  height,\n  placeholderText = 'No Image',\n  image = new Image(),\n}: any) => {\n  const canvasRef = useRef<HTMLCanvasElement | null> (null)\n\n  const canvasDraw = () => {\n    console.log(image)\n    const canvas = canvasRef.current\n    if (canvas) {\n      const context = canvas.getContext('2d')\n      context && context.drawImage(image, posX, posY, width, height)\n    }\n    \n  }  \n\n  const drawPlaceholder = () => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      const context = canvas.getContext('2d')\n      if (context) {\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        context.fillStyle = '#d3d3d3'\n        context.textAlign = 'center'\n        context.font = '5em Arial'\n        context.textBaseline = 'middle'\n        context.fillText(\n          placeholderText,\n          canvas.width / 2,\n          canvas.height / 2\n        )\n      }\n    \n    }\n    \n  }\n\n  useEffect(() => {\n    canvasDraw()\n    if (!image.src){\n      drawPlaceholder()\n    }\n  }, [image])\n\n  return <canvas ref={canvasRef} width={width} height={height} />\n}\n\nexport default WsHOC(ReactRgbStream)","import React, { useEffect, useRef, useState } from 'react'\nimport fit from 'canvas-fit'\nimport { WsHOC } from './WsHOC'\n\nconst ReactResponsiveRgbStream = ({\n  maxWidth,\n  minWidth,\n  aspectRatio,\n  placeholderText = 'No Image',\n  image\n} : {\n  maxWidth: number,\n  minWidth: number,\n  aspectRatio: number,\n  placeholderText: string,\n  image: any,\n}) => {\n  let resizeTimeout:NodeJS.Timeout\n  const [drawing, setDrawing] = useState(false)\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  \n  const draw = () => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      const ctx = canvas.getContext('2d')\n      ctx && ctx.drawImage(image, 0, 0, canvas.width, canvas.height)\n    }\n  }\n\n  const handleResize = () => {\n    clearTimeout(resizeTimeout)\n    setDrawing(false)\n    resizeTimeout = setTimeout(() => {\n      const canvas = canvasRef.current\n      if (canvas) {\n        fit(canvas)\n        setDrawing(true)\n        if (!image.src) {\n          drawPlaceholder()\n        }\n      }\n      \n    }, 500)\n  }\n\n  const drawPlaceholder = () => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      const context = canvas.getContext('2d')\n      if (context) {\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        context.fillStyle = '#d3d3d3'\n        context.textAlign = 'center'\n        context.font = '5em Arial'\n        context.textBaseline = 'middle'\n        context.fillText(\n          placeholderText,\n          canvas.width / 2,\n          canvas.height / 2\n        )\n      }\n    }\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      fit(canvas)\n      draw()\n      setDrawing(true)\n      window.addEventListener('resize', handleResize, false)\n    }\n    return () => {\n      window.removeEventListener('resize', handleResize, false)\n    }\n  }, [])\n\n  useEffect(() => {\n    draw()\n    if (!image.src) {\n      drawPlaceholder()\n    }\n  }, [image])\n\n  return (\n    <div\n      style={{\n        aspectRatio: aspectRatio.toString(),\n        maxWidth,\n        minWidth,\n        padding: 0,\n        margin: 0,\n        position: 'relative'\n      }}\n    >\n      <canvas style={drawing ? {} : { display: 'none' }} ref={canvasRef} />\n    </div>\n  )\n}\n\nexport default WsHOC(ReactResponsiveRgbStream)","import React, { useEffect, useState } from 'react'\n\nexport const RembrainImage = ({ token, url, width, height, alt=\"Image\", onLoad=()=>{}, onError=()=>{} }:\n  {\n    token: string,\n    url: string,\n    width: number,\n    height: number,\n    alt: string,\n    onLoad: any,\n    onError: any,\n  }) => {\n  const [src, setSrc] = useState(\"\")\n  useEffect(() => {\n    if (url) {\n      fetch(url, { headers: { Authorization: token } }).then((resp) => {\n        resp.blob().then((blobResp) => {\n          const data = blobResp\n          const urlCreator = window.URL || window.webkitURL\n          const objectUrl = urlCreator.createObjectURL(data)\n          setSrc(objectUrl)\n        })\n      }).catch(onError)\n    }\n  }, [url])\n  return (\n    <img\n      onLoad={onLoad}\n      src={src && src}\n      id='rembrainImage'\n      className='rembrain-image'\n      width={width}\n      height={height}\n      alt={alt ? alt : ''}\n    />\n  )\n}\n","import { Buffer } from 'buffer/'\n\nexport interface IOperatorProps {\n  dataWSUrl: string\n  robotName: string\n  accessToken: string\n}\n\nexport interface RobotImageData {\n  data: Buffer\n  type: string\n}\n\nexport interface IWebSocketControlPackage {\n  command: string\n  exchange: string\n}\n\nexport interface RobotData {\n  fx: number\n  fy: number\n  ppx: number\n  ppy: number\n  depth_unit: number\n  time: number\n  frameindex: number\n}\n\nexport interface RobotState {\n  arm_state: string\n  state_machine: string\n  last_goto: object\n  joints: number[]\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport class Rectangle {\n  x: number\n  y: number\n  w: number\n  h: number\n\n  public static fromPoints(p1: Point, p2: Point): Rectangle {\n    // Determine topLeft and bottomRight points of the rectangle\n    let topLeft = {\n      x: Math.min(p1.x, p2.x),\n      y: Math.min(p1.y, p2.y)\n    }\n    let bottomRight = {\n      x: Math.max(p1.x, p2.x),\n      y: Math.max(p1.y, p2.y)\n    }\n    return new Rectangle(\n      topLeft.x,\n      topLeft.y,\n      bottomRight.x - topLeft.x,\n      bottomRight.y - topLeft.y\n    )\n  }\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x\n    this.y = y\n    this.w = w\n    this.h = h\n  }\n\n  get TopLeft(): Point {\n    return { x: this.x, y: this.y }\n  }\n  get TopRight(): Point {\n    return { x: this.x + this.w, y: this.y }\n  }\n  get BottomLeft(): Point {\n    return { x: this.x, y: this.y + this.h }\n  }\n  get BottomRight(): Point {\n    return { x: this.x + this.w, y: this.y + this.h }\n  }\n  get Center(): Point {\n    return { x: this.x + this.w * 0.5, y: this.y + this.h * 0.5 }\n  }\n  get CenterTop(): Point {\n    return { x: this.x + this.w * 0.5, y: this.y }\n  }\n  get CenterBottom(): Point {\n    return { x: this.x + this.w * 0.5, y: this.y + this.h }\n  }\n}\n","import { Subject, ReplaySubject, Observable } from 'rxjs'\nimport { RobotImageData, RobotState, RobotData } from './entities'\nimport { Image } from 'image-js'\nimport { Buffer } from 'buffer/'\nimport { IOperatorProps } from './entities'\n\nexport interface IImageReceiver {\n  imageSubject: Observable<RobotImageData>\n  depthSubject: Observable<Image>\n  dataSubject: Observable<RobotData>\n  stateSubject: Observable<RobotState>\n\n  shutdown(): void\n}\n\nexport class WebSocketImageReceiver implements IImageReceiver {\n  dataWebsocket: WebSocket\n  stateWebsocket: WebSocket\n  dataURL: string\n  robotName: string\n  accessToken: string\n\n  public constructor(settings: IOperatorProps) {\n    this.dataURL = settings.dataWSUrl\n    this.robotName = settings.robotName\n    this.accessToken = settings.accessToken\n\n    this.openDataWebsocket()\n    this.openStateWebsocket()\n  }\n\n  openDataWebsocket() {\n    this.dataWebsocket = new WebSocket(this.dataURL)\n    this.dataWebsocket.onopen = this.onDataOpen\n    this.dataWebsocket.onclose = this.onDataClosed\n    this.dataWebsocket.onerror = this.onDataError\n    this.dataWebsocket.onmessage = this.onDataMessage\n  }\n\n  sendDataInitPacket() {\n    let controlPacket = {\n      command: 'pull',\n      exchange: `camera0`,\n      robot_name: this.robotName,\n      accessToken: this.accessToken\n    }\n    // console.log(\"Sending\", controlPacket);\n    this.dataWebsocket.send(JSON.stringify(controlPacket))\n  }\n\n  imageSubject = new ReplaySubject<RobotImageData>(1)\n  depthSubject = new ReplaySubject<Image>(1)\n  dataSubject = new ReplaySubject<RobotData>(1)\n\n  onDataOpen = (ev: Event) => {\n    console.log('Data Websocket Opened', ev)\n    this.sendDataInitPacket()\n  }\n\n  onDataClosed = (ev: CloseEvent) => {\n    console.log('Data Websocket Closed', ev)\n    console.log('Trying to open the websocket again')\n    this.openDataWebsocket()\n  }\n\n  onDataError = (ev: Event) => {\n    console.log('Data Websocket Error', ev)\n  }\n\n  onDataMessage = (ev: any) => {\n    this.unpackData(ev.data)\n  }\n\n  async unpackData(data: Blob | string) {\n    if (typeof data === 'string') {\n      console.error('Error unpacking video feed:', data)\n      return\n    }\n    let dataType = new Uint8Array(await data.slice(0, 1).arrayBuffer())[0]\n    if (dataType === 1) {\n      const HEADER_END = 13\n      // 1st byte is the type of image, for now assuming it's JPG+PNG and skip it\n      let lengths = new Uint32Array(\n        await data.slice(1, HEADER_END).arrayBuffer()\n      )\n      // Get blobs for each of the images + text\n      // image is the video feed in JPG\n      let imageBlob = data.slice(HEADER_END, HEADER_END + lengths[0])\n      // depth is in PNG\n      let depthBlob = data.slice(\n        HEADER_END + lengths[0],\n        HEADER_END + lengths[0] + lengths[1]\n      )\n      let statusBlob = data.slice(\n        HEADER_END + lengths[0] + lengths[1],\n        HEADER_END + lengths[0] + lengths[1] + lengths[2]\n      )\n\n      imageBlob.arrayBuffer().then(\n        (val) => {\n          let imData = {\n            data: Buffer.from(val),\n            type: 'image/jpg'\n          }\n          this.imageSubject.next(imData)\n        },\n        (err) => console.log('Error while sending image:', err)\n      )\n\n      depthBlob\n        .arrayBuffer()\n        .then(\n          (val) => Image.load(val),\n          (err) => console.log('Error while loading depth map: ', err)\n        )\n        .then((depth) => {\n          if (!depth) return\n          this.depthSubject.next(depth)\n        })\n\n      statusBlob.text().then(\n        (val) => this.dataSubject.next(JSON.parse(val)),\n        (err) => console.log('Error while getting status:', err)\n      )\n    } else if (dataType === 2) {\n      let lengths = new Uint32Array(await data.slice(1, 13).arrayBuffer())\n      let jpgBlob = data.slice(9, 9 + lengths[0])\n\n      jpgBlob.arrayBuffer().then((val: ArrayBuffer) => {\n        var imData = {\n          data: Buffer.from(val),\n          type: 'image/jpg'\n        }\n        this.imageSubject.next(imData)\n      })\n    } else {\n      console.log(`Data type ${dataType} isn't JPG+PNG(1)`)\n    }\n  }\n\n  stateSubject = new ReplaySubject<RobotState>(1)\n\n  openStateWebsocket() {\n    this.stateWebsocket = new WebSocket(this.dataURL)\n    this.stateWebsocket.onopen = this.onStateOpen\n    this.stateWebsocket.onclose = this.onStateClosed\n    this.stateWebsocket.onerror = this.onStateError\n    this.stateWebsocket.onmessage = this.onStateMessage\n  }\n\n  sendStateInitPacket() {\n    let controlPacket = {\n      command: 'pull',\n      exchange: `state`,\n      robot_name: this.robotName,\n      accessToken: this.accessToken\n    }\n    this.stateWebsocket.send(JSON.stringify(controlPacket))\n  }\n\n  onStateClosed = (ev: CloseEvent) => {\n    console.log('State Websocket Closed', ev)\n    console.log('Trying to open the websocket again')\n    this.openStateWebsocket()\n  }\n\n  onStateOpen = (ev: Event) => {\n    console.log('State Websocket Opened', ev)\n    this.sendStateInitPacket()\n  }\n\n  onStateError = (ev: Event) => {\n    console.log('State Websocket Error', ev)\n  }\n\n  onStateMessage = (ev: any) => {\n    this.unpackState(ev.data)\n  }\n\n  unpackState(data: Blob | string) {\n    if (typeof data === 'string') {\n      console.error('Error unpacking robot state:', data)\n      return\n    }\n    data.text().then((res) => this.stateSubject.next(JSON.parse(res)))\n  }\n\n  public shutdown() {\n    this.dataWebsocket.onclose = null\n    this.stateWebsocket.onclose = null\n    this.dataWebsocket.close()\n    this.stateWebsocket.close()\n  }\n}\n","import { IOperatorProps, Point, Rectangle, RobotData } from './entities'\nimport { OperatorCommand } from './commands/command-base'\n\nexport interface INetworkOperator {\n  enqueueCommand(command: OperatorCommand): void\n\n  shutdown(): void\n}\n\ntype Message = {\n  command: string\n  exchange: string\n  robot_name: string\n  message: OperatorCommand\n  accessToken: string\n}\n\nexport class NetworkOperator implements INetworkOperator {\n  private commandWebsocket: WebSocket\n  private settings: IOperatorProps\n\n  // private hasSentCommand = false;\n\n  private messageQueue: Message[] = []\n\n  constructor(settings: IOperatorProps) {\n    this.settings = settings\n    this.openWebsocket()\n  }\n\n  enqueueCommand(command: OperatorCommand): void {\n    let messageObj: Message = {\n      command: 'push',\n      exchange: `commands`,\n      robot_name: this.settings.robotName,\n      message: command,\n      accessToken: this.settings.accessToken\n    }\n    console.log({ messageObj })\n    console.log('Enqueuing command:', command)\n    this.messageQueue.push(messageObj)\n    this.sendQueuedCommands()\n  }\n\n  private sendQueuedCommands(): void {\n    if (this.messageQueue.length == 0) return\n    // sending commands one by one, since the websocket closes after each one\n    while (\n      this.messageQueue.length &&\n      this.commandWebsocket.readyState === WebSocket.OPEN\n    ) {\n      let command = this.messageQueue.shift()\n      console.debug('Sending:', command)\n      this.commandWebsocket.send(JSON.stringify(command))\n    }\n  }\n\n  openWebsocket() {\n    this.commandWebsocket = new WebSocket(this.settings.dataWSUrl)\n    this.commandWebsocket.onopen = this.onWSOpen\n    this.commandWebsocket.onclose = this.onWSClosed\n    this.commandWebsocket.onerror = this.onWSError\n    this.commandWebsocket.onmessage = this.onWSMessage\n  }\n\n  onWSClosed = (ev: CloseEvent) => {\n    console.debug('Command Websocket Closed', ev)\n    console.debug('Trying to open the websocket again')\n    this.openWebsocket()\n  }\n\n  onWSOpen = (ev: Event) => {\n    console.debug('Command Websocket Opened', ev)\n    // this.hasSentCommand = false;\n    if (this.messageQueue.length) {\n      console.log('There are unsent messages in the queue, sending them')\n      this.sendQueuedCommands()\n    }\n  }\n\n  onWSError = (ev: Event) => {\n    console.log('Command Websocket Error', ev)\n  }\n\n  onWSMessage = (ev: any) => {\n    this.unpackData(ev.data)\n  }\n\n  unpackData(data: Blob | string) {\n    if (typeof data === 'string') {\n      console.log('Command answer:', data)\n      return\n    }\n    data.text().then((res) => console.log(JSON.parse(res)))\n  }\n\n  public shutdown() {\n    this.commandWebsocket.onclose = null\n    this.commandWebsocket.close()\n    this.commandWebsocket = null\n  }\n}\n","import { RobotData } from '../entities'\n\nexport interface OperatorCommand {\n  op: string\n  source: string\n  timestamp?: number\n  frame_timestamp?: number\n}\n\nexport class CommandSettings {\n  private static instance: CommandSettings\n  public source: string = 'operator'\n\n  public static getInstance(): CommandSettings {\n    if (!CommandSettings.instance) {\n      CommandSettings.instance = new CommandSettings()\n    }\n    return CommandSettings.instance\n  }\n}\n\nexport class CommandBase implements OperatorCommand {\n  op: string\n  source = CommandSettings.getInstance().source\n  timestamp = Date.now()\n  frame_timestamp: number\n\n  constructor(op: string, robotStatus: RobotData) {\n    this.op = op\n    this.frame_timestamp = robotStatus.frameindex\n    this.timestamp = robotStatus.time\n  }\n}\n\nexport function SetCommandOperatorValue(operator: string) {\n  CommandSettings.getInstance().source = operator\n}\n","import { Point, Rectangle, RobotData } from \"../entities\";\nimport { CommandBase } from \"./command-base\";\n\nexport class CommandGoto extends CommandBase {\n\n    pos: number[];           // Physical XYZ coordinates of the selected point\n    pick_point: number[];    // Pixel XY coordinates of the selected point \n    object_rect: number[][]; // Selected area\n\n    constructor(robotStatus: RobotData, selectionPoint: Point, selectionArea: Rectangle, depthValAtSelection: number) {\n        super(\"goto\", robotStatus);\n\n        this.pick_point = undefined;\n        this.pos = undefined;\n        this.object_rect = undefined;\n\n        if (selectionPoint) {\n            this.pick_point = [selectionPoint.x, selectionPoint.y];\n        } \n\n        if (selectionArea) {\n            this.object_rect = [\n                [selectionArea.TopLeft.x, selectionArea.TopLeft.y],\n                [selectionArea.BottomRight.x, selectionArea.BottomRight.y]\n            ];\n        }\n\n        if (depthValAtSelection && selectionPoint) {\n            let z = depthValAtSelection * robotStatus.depth_unit;\n            if (z) {\n                let x = (selectionPoint.x - robotStatus.ppx) * z / robotStatus.fx;\n                let y = (selectionPoint.y - robotStatus.ppy) * z / robotStatus.fy;\n                this.pos = [x, y, z];\n            }\n        }\n    }\n}","import { RobotData } from \"../entities\";\nimport { CommandBase } from \"./command-base\";\n\nexport class CommandSetTag extends CommandBase {\n    tag_id: number;\n\n    constructor(tag_id: number, robotStatus: RobotData) {\n        super(\"calibration/set-tag\", robotStatus);\n        this.tag_id = tag_id;\n    }\n}","import { RobotData } from \"../entities\";\nimport { CommandBase } from \"./command-base\";\n\nexport class CommandWaitForIdle extends CommandBase {\n    constructor(robotStatus: RobotData) {\n        super(\"wait-for-idle\", robotStatus);\n    }\n}","import { RobotData } from \"../entities\";\nimport { CommandBase } from \"./command-base\";\n\nexport class CommandSetJoints extends CommandBase {\n    joints: number[];\n\n    constructor(joints: number[], robotStatus: RobotData) {\n        super(\"setJ\", robotStatus);\n        this.joints = joints;\n    }\n}","import * as React from \"react\";\nimport Image from \"image-js\";\nimport {Rectangle, Point, RobotImageData,\n        RobotData, RobotState} from \"./entities\";\nimport { IImageReceiver, WebSocketImageReceiver } from \"./image-receiver\";\nimport { INetworkOperator, NetworkOperator } from \"./network-operator\";\nimport { BehaviorSubject, Subscription } from \"rxjs\";\nimport { CommandGoto, CommandWaitForIdle } from \"./commands/operator-commands\";\nimport { distinctUntilChanged, distinctUntilKeyChanged, throttleTime } from \"rxjs/operators\";\nimport { IOperatorProps } from \"./entities\";\n// import { IImageReceiver } from \"./image-receiver\";\n// import { NetworkOperator } from \"./network-operator\";\n\nexport class OperatorCanvas extends React.Component {\n\n    private canvasRef: React.RefObject<HTMLCanvasElement>;\n\n    /**\n     * Canvas on which our selection will be colored according to the depth map\n     * The canvas is mixed in with the raw image canvas \n     */\n    private depthCanvas: HTMLCanvasElement;\n    /**\n     * Current image of the depth map\n     */\n    private depthData: Image;\n\n    // Point relative to which we're calculating the depth in the selection\n    private medianPoint: Point;\n    // Depth data at the median point\n    private medianPointValue: number;\n\n    private robotState: RobotState = undefined;\n\n    private hasImage: boolean = false;\n    private img: HTMLImageElement = document.createElement(\"img\");\n\n    private _imageReceiver: IImageReceiver;\n    private _networkOperator: INetworkOperator;\n\n    // While a user a selecting, this stores the point of origin\n    // Once user has selected an area, it's stored in selection, and this one is set to null\n    private selectionStart: Point;\n    \n    // Mouse position in the canvas, used to draw the crosshair\n    private mousePos: Point;\n\n    // Defines the selected area\n    private selection: Rectangle;\n\n    private robotData: RobotData;\n    private settings: IOperatorProps;\n    private subscriptions: Subscription[] = [];\n\n\n    private selectionSubject = new BehaviorSubject<Rectangle>(undefined);\n\n\n    constructor(props: IOperatorProps) {\n        super(props);\n        this.settings = {\n            dataWSUrl: props.dataWSUrl,\n            robotName: props.robotName,\n            accessToken: props.accessToken,\n        };\n        this.canvasRef = React.createRef();\n    }\n\n    public render() {\n        return (\n            <canvas ref={this.canvasRef} width=\"1280\" height=\"720\"\n                    onContextMenu={(e) => {e.preventDefault()}} \n                    tabIndex={1} \n                    onMouseDown={this.pressEventHandler}\n                    onMouseMove={this.dragEventHandler}\n                    onMouseUp={this.releaseEventHandler}\n                    onKeyUp={this.keyPressEventHandler}/>\n        )\n    }\n\n    componentDidMount() {\n        this.depthCanvas = document.createElement(\"canvas\");\n        this.depthCanvas.width = 1280;\n        this.depthCanvas.height = 720;\n    \n        this._imageReceiver = new WebSocketImageReceiver(this.settings);\n        this._networkOperator = new NetworkOperator(this.settings);\n\n        this.img.onload = () => this.redraw();\n        // Subscribing to all the required observables\n        this.subscriptions.push(\n            this.selectionSubject.subscribe(s => this.redrawDepth(s)),\n            this._imageReceiver.imageSubject.subscribe(d => this.setVideoFeed(d)),\n            this._imageReceiver.depthSubject.subscribe(d => this.setDepthData(d)),\n            this._imageReceiver.dataSubject.subscribe(d => this.updateStatus(d)),\n            this._imageReceiver.stateSubject\n                .pipe(\n                    distinctUntilKeyChanged(\"state_machine\"),\n                    throttleTime(1000)\n                ).subscribe(d => this.updateState(d)),\n        );\n    }\n\n    componentWillUnmount() {\n        this._imageReceiver?.shutdown();\n        this._networkOperator?.shutdown();\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private setVideoFeed(imageData: RobotImageData) {\n        // Assuming we are getting PNG for now\n        if (imageData === undefined)\n        {\n            this.hasImage = false;\n            return;\n        }\n        this.hasImage = true;\n        let buf = imageData.data.toString('base64');\n        this.img.src = `data:${imageData.type};base64,`+buf;\n    }\n\n    private setDepthData(depthData: Image) {\n        this.depthData = depthData;\n        this.redrawDepth(this.selection);\n        this.redraw();\n    }\n\n    private updateStatus(status: RobotData) {\n        this.robotData = status;\n    }\n    \n    private updateState(state: RobotState) {\n        this.robotState = state;\n        this.redraw();\n    }\n\n\n    private redraw() {\n        const canvas = this.canvasRef.current;\n        if (canvas) {        \n            const ctx = canvas.getContext(\"2d\");\n            \n            if (this.hasImage) {\n                // Base: image from the robot\n                ctx.drawImage(this.img, 0, 0, 1280, 720);\n                \n                // Compositing depth calculation on top\n                ctx.save();\n                ctx.globalCompositeOperation = \"screen\";\n                ctx.drawImage(this.depthCanvas, 0, 0);\n                ctx.restore();\n            \n                // Selection area\n                if (this.selection) {\n                    this.SetCanvasStyle(ctx, StrokeStyle.SelectionRectangle);\n                    let rect = this.selection;\n                    this.doCanvasRect(ctx, CanvasAction.Stroke, rect);\n                }\n            \n                // Median point\n                if (this.medianPoint) {\n                    this.SetCanvasStyle(ctx, StrokeStyle.MedianPoint);\n                    ctx.beginPath();\n                    ctx.arc(this.medianPoint.x, this.medianPoint.y,\n                        10, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n                \n                // Crosshair\n                if (this.mousePos) {\n                    this.SetCanvasStyle(ctx, StrokeStyle.Crosshair);\n                    // horizontal line\n                    ctx.beginPath();\n                    ctx.moveTo(0, this.mousePos.y);\n                    ctx.lineTo(canvas.width, this.mousePos.y);\n                    ctx.stroke()\n                    ctx.closePath();\n                    // vertical line\n                    ctx.beginPath();\n                    ctx.moveTo(this.mousePos.x, 0);\n                    ctx.lineTo(this.mousePos.x, canvas.height);\n                    ctx.stroke()\n                    ctx.closePath();\n                }\n            } else {\n                this.SetCanvasStyle(ctx, StrokeStyle.NoImage_BG);\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            \n                const canvasRect = new Rectangle(0, 0, canvas.width, canvas.height);\n                this.SetCanvasStyle(ctx, StrokeStyle.NoImage_Text);\n                ctx.fillText(\"No Image\", canvasRect.Center.x, canvasRect.Center.y);\n            }\n        \n            // Plaque with robot's status\n            this.SetCanvasStyle(ctx, StrokeStyle.PlaqueBackground)\n            let plaqueWidth = 500;\n            let plaqueHeight = 60;\n            let plaqueRect = new Rectangle(\n                (canvas.offsetWidth - plaqueWidth) / 2,\n                 canvas.offsetHeight - plaqueHeight,\n                plaqueWidth,\n                plaqueHeight\n            );\n            this.doCanvasRect(ctx, CanvasAction.Fill, plaqueRect);\n            \n            // Text of robot's status\n            if (this.robotState) {\n                const state = this.robotState.state_machine;\n                this.SetCanvasStyle(ctx, StrokeStyle.PlaqueText)\n                ctx.fillText(state, plaqueRect.Center.x, plaqueRect.Center.y);\n            }\n        \n            // Border\n            this.SetCanvasStyle(ctx, StrokeStyle.Border);\n            ctx.strokeRect(0, 0, canvas.width, canvas.height);\n        }\n    }\n\n\n    // Redraws the depth calculation\n    private redrawDepth(selection: Rectangle) {\n        // In the process of selection - skip\n        if (this.selectionStart || (!this.medianPoint)) return;\n\n        let depthCanvas = this.depthCanvas;\n        let ctx = depthCanvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, depthCanvas.width, depthCanvas.height);\n\n        let imageCanvas = this.canvasRef.current;\n\n        // No selection or no depth data - skip\n        if (!selection || !this.depthData) return;\n\n        // clamping selection to edges so we don't crop outside the range accidentally\n        if (selection.x + selection.w > imageCanvas.width) {\n            selection.w = imageCanvas.width - selection.x;\n        }\n        if (selection.y + selection.h > imageCanvas.height) {\n            selection.h = imageCanvas.height - selection.y;\n        }\n\n        // not handling empty selections\n        if (this.selection.w * this.selection.h == 0) return;\n       \n        let cropped_depth = this.depthData.crop({\n            x: selection.x,\n            y: selection.y,\n            width: selection.w,\n            height: selection.h\n        });\n\n        let median = this.getMedianForPoint(this.depthData, this.medianPoint);\n        this.medianPointValue = median;\n        // get the map we'd use for pixels that are close to the median\n        let colorMap = this.calculateDepthDevColors(median, 30);\n        const nChannels = 4;\n\n        // calculate the ImageData that we will draw\n        let pixelsToDraw = new Uint8ClampedArray(nChannels * cropped_depth.size);\n        const imageData = new ImageData(selection.w, selection.h);\n        for (let i = 0; i < cropped_depth.size; i++) {\n            const depthPixel = cropped_depth.getPixel(i);\n            const value = depthPixel[0];\n            if (!colorMap.has(value)) {\n                continue;\n            }\n            const color = colorMap.get(value);\n            for (let j = 0; j < 4; j++) {\n                pixelsToDraw[i*nChannels + j] = color[j];\n            }\n        }\n        imageData.data.set(pixelsToDraw);\n        // Draw it to the canvas\n        ctx.putImageData(imageData, selection.x, selection.y);\n    }\n\n    private getMedianForPoint(image: Image, point: Point): number {\n        const cropRadius = 10;\n\n        let cropX = point.x - cropRadius / 2;\n        if (cropX < 0) cropX = 0;\n        let cropY = point.y - cropRadius / 2;\n        if (cropY < 0) cropY = 0;\n\n        let cropW = (cropX + cropRadius < image.width) ? cropRadius : image.width - cropX;\n        let cropH = (cropY + cropRadius < image.height) ? cropRadius : image.height - cropY;\n        let crop = image.crop({\n            x: cropX,\n            y: cropY,\n            width: cropW,\n            height: cropH\n        });\n        return (crop as any).median[0];\n    }\n\n    /**\n     * Calculates a gradient of red-yellow-green in the interval\n     * [median-spread, median+spread]\n     * @param median the median value, that will be, well, in the middle\n     * @param spread the spread of the values \n     */\n    private calculateDepthDevColors(median: number, spread: number = 20): Map<number, number[]> {\n        let map = new Map<number, number[]>();\n        \n        const colorNear = [255, 0, 0, 255];        //red\n        const colorMedian = [255, 255, 0, 255];    //yellow\n        const colorFar = [0, 255, 0, 255];         //green\n        // Calculating near-med gradient values\n        for (let i = median - spread; i < median; i++) {\n            let p = (i - (median - spread)) / spread; // percentage how far along the gradient we are\n            let color = [\n                colorNear[0] + p*(colorMedian[0] - colorNear[0]),\n                colorNear[1] + p*(colorMedian[1] - colorNear[1]),\n                colorNear[2] + p*(colorMedian[2] - colorNear[2]),\n                255,\n            ]\n            map.set(i, color);\n        }\n        // Calculating med-far gradient values\n        for (let i = median; i <= median + spread; i++) {\n            let p = (i - median) / spread; // percentage how far along the gradient we are\n            let color = [\n                colorMedian[0] + p*(colorFar[0] - colorMedian[0]),\n                colorMedian[1] + p*(colorFar[1] - colorMedian[1]),\n                colorMedian[2] + p*(colorFar[2] - colorMedian[2]),\n                255,\n            ]\n            map.set(i, color);\n        }\n        return map;\n    }\n\n    private sendCommand() {\n        var cmdGoto = new CommandGoto(\n            this.robotData,\n            this.medianPoint,\n            this.selection,\n            this.medianPointValue);\n        this._networkOperator.enqueueCommand(cmdGoto)\n        var cmdIdle = new CommandWaitForIdle(this.robotData);\n        this._networkOperator.enqueueCommand(cmdIdle);\n    }\n\n    private releaseEventHandler = (e: React.MouseEvent) => {\n        // If right click was pressed - ignore\n        if (e.button == 2) {\n            return;\n        }\n        // Finish selection\n        this.selectionStart = null;\n        if (this.selection) {\n            // Sending out that we have finished the selection to subscribers\n            this.selectionSubject.next(this.selection);\n            this.medianPoint = this.selection.Center;\n        }\n        this.redraw();\n    }\n\n    private keyPressEventHandler = (e: React.KeyboardEvent) => {\n        if (e.key == \" \") {\n            this.sendCommand();\n        }\n    }\n\n    private pressEventHandler = (e: React.MouseEvent) => {\n        let point = this.getXY(e);\n        if (e.button == 2) {\n            // right click - change median point\n            this.medianPoint = point;\n            this.redrawDepth(this.selection);\n        } else {\n            // Left click or tap\n            // restart selection process\n            this.selection = null;\n            this.selectionStart = point;\n        }\n\n        this.redraw();\n    }\n\n    private dragEventHandler = (e: React.MouseEvent) => {\n        let point = this.getXY(e);\n        this.mousePos = point;\n\n        // if we're currently selecting, refresh selection\n        if (this.selectionStart) {\n            this.selection = Rectangle.fromPoints(this.selectionStart, point);\n        }\n        this.redraw();\n\n        e.preventDefault();\n    }\n\n    private getXY(e: React.MouseEvent): Point {\n        let mouseX = e.pageX;\n        let mouseY = e.pageY;\n        mouseX -= this.canvasRef.current.offsetLeft;\n        mouseY -= this.canvasRef.current.offsetTop;\n        return {x: mouseX, y: mouseY};\n    }\n\n    private doCanvasRect(ctx: CanvasRenderingContext2D, action: CanvasAction, rect: Rectangle) {\n        let x = rect.x;\n        let y = rect.y;\n        let w = rect.w;\n        let h = rect.h;\n        switch (action) {\n            case CanvasAction.Fill:\n                ctx.fillRect(x, y, w, h);\n                break;\n            case CanvasAction.Stroke:\n                ctx.strokeRect(x, y, w, h);\n                break;\n        }\n    }\n\n    private SetCanvasStyle(ctx: CanvasRenderingContext2D, style: StrokeStyle) {\n        switch (style) {\n            case StrokeStyle.Border:\n                ctx.strokeStyle = \"green\";\n                ctx.lineWidth = 20;\n                break;\n            case StrokeStyle.SelectionRectangle:\n                ctx.strokeStyle = \"red\";\n                ctx.lineWidth = 7;\n                break;\n            case StrokeStyle.PlaqueBackground:\n                ctx.fillStyle = \"black\";\n                break;\n            case StrokeStyle.PlaqueText:\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                ctx.fillStyle = \"white\";\n                ctx.font = \"bold 48px sans-serif\";\n                break;\n            case StrokeStyle.Crosshair:\n                ctx.strokeStyle = \"white\";\n                ctx.lineWidth = 2;\n                break;\n            case StrokeStyle.MedianPoint:\n                ctx.fillStyle = \"#aaaaaa99\";\n                ctx.strokeStyle = \"#000000bb\";\n                ctx.lineWidth = 1;\n                break;\n            case StrokeStyle.NoImage_BG:\n                ctx.fillStyle = \"#aaaaaa\";\n                break;\n            case StrokeStyle.NoImage_Text:\n                ctx.fillStyle = \"#eeeeee\";\n                ctx.font = \"bold 200px sans-serif\";\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                break;\n        }\n    }\n}\n\n\n\nenum CanvasAction {\n    Stroke,\n    Fill,\n}\n\nenum StrokeStyle {\n    Border,\n    Crosshair,\n    SelectionRectangle,\n    PlaqueBackground,\n    PlaqueText,\n    MedianPoint,\n    NoImage_BG,\n    NoImage_Text\n}\n\n","import { stat } from \"fs\";\nimport * as React from \"react\";\nimport { Subscription } from \"rxjs\";\nimport { CommandBase, CommandSettings } from \"./commands/command-base\";\nimport { CommandSetJoints } from \"./commands/command-set-joints\";\nimport { CommandSetTag } from \"./commands/command-set-tag\";\nimport { IOperatorProps, RobotData, RobotImageData, RobotState } from \"./entities\";\nimport { IImageReceiver, WebSocketImageReceiver } from \"./image-receiver\";\nimport { INetworkOperator, NetworkOperator } from \"./network-operator\";\nimport \"./operator-debug.scss\";\n\ninterface IOperatorState {\n    wsUrl: string,\n    robotName: string,\n    accessToken: string,\n    depthData: string,\n    imageData: string,\n    fps: number,\n    connected: boolean,\n    isCalibrating: boolean,\n    tagsCalibrated: {[tag: string]: boolean},\n    joints: number[],\n    commandList: any[],\n    commandNameInput: string,\n    commandOpInput: string,\n    state_machine: string,\n}\n\nexport class OperatorDebug extends React.Component<IOperatorProps, IOperatorState> {\n\n    private _imageReceiver: IImageReceiver;\n    private _networkOperator: INetworkOperator;\n\n    private subscriptions: Subscription[] = [];\n\n    private lastFrameDate = Date.now();\n    private robotData: RobotData;\n    private robotState: RobotState;\n\n    constructor(props: IOperatorProps) {\n        super(props);\n\n        let tags = [6, 8, 10];\n        let tagSets = {};\n        tags.map(t => tagSets[t] = false);\n        \n        this.state = {\n            wsUrl: this.props.dataWSUrl,\n            robotName: this.props.robotName,\n            accessToken: this.props.accessToken,\n            fps: 0,\n            depthData: undefined,\n            imageData: undefined,\n            connected: false,\n            isCalibrating: false,\n            tagsCalibrated: tagSets,\n            joints: [],\n            commandList:[],\n            commandNameInput:\"\",\n            commandOpInput:\"\",\n            state_machine:\"\"\n        }\n    }\n\n    connectionSettingChanged(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value});\n    }\n\n    componentWillUnmount() {\n        this.disconnect();\n    }\n\n    componentDidMount() {\n        this.connect();\n        const commands = JSON.parse(localStorage.getItem(\"rembrain_debug_operator_commands\"))\n        commands && this.setState({commandList: commands})\n    }\n\n    addCommand () {\n        const {commandNameInput: name, commandOpInput: op} = this.state;\n        if (name && op) {\n            const newList = [...this.state.commandList, {name,op}]\n            this.setState({commandList: newList})    \n            localStorage.setItem(\"rembrain_debug_operator_commands\",JSON.stringify(newList))\n            this.setState({commandNameInput: \"\", commandOpInput: \"\"})\n        }\n        \n    }\n\n    removeCommand (name) {\n        const idx = this.state.commandList.findIndex((el) => el.name===name)\n        const {commandList} = this.state\n        const newList = [...commandList.slice(0,idx), ...commandList.slice(idx+1)]\n        this.setState({ commandList: newList})\n        localStorage.setItem(\"rembrain_debug_operator_commands\",JSON.stringify(newList))\n    }\n\n    connect() {\n        // console.log(this.state);\n        let settings = {\n            accessToken: this.state.accessToken,\n            dataWSUrl: this.state.wsUrl,\n            robotName: this.state.robotName\n        };\n        let netop = new NetworkOperator(settings);\n        let imgrec = new WebSocketImageReceiver(settings);\n\n        this.subscriptions.push(imgrec.imageSubject.subscribe(camera => this.gotCameraData(camera)));\n        this.subscriptions.push(imgrec.depthSubject.subscribe(depth => this.gotDepthData(depth)));\n        this.subscriptions.push(imgrec.stateSubject.subscribe(state => this.gotRobotState(state)));\n        this.subscriptions.push(imgrec.dataSubject.subscribe(data => this.gotRobotData(data)));\n\n        this._imageReceiver = imgrec;\n        this._networkOperator = netop;\n\n        this.setState({connected: true});\n    }\n\n    disconnect() {\n        this._networkOperator?.shutdown();\n        this._imageReceiver?.shutdown();\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n        this.setState({\n            connected: false,\n            isCalibrating: false,\n            joints: [],\n        });\n    }\n\n    \n\n    gotCameraData(cameraData: RobotImageData) {\n        if (cameraData === undefined) return;\n        let buf = cameraData.data.toString('base64');\n        this.setState({imageData: `data:${cameraData.type};base64,`+buf});\n        this.recalculateFPS();\n    }\n\n    recalculateFPS() {\n        const newFrameDate = Date.now();\n        const delta = newFrameDate - this.lastFrameDate;\n        const fps = 1000 / delta;\n        this.lastFrameDate = newFrameDate;\n        this.setState({fps: fps});\n    }\n\n    gotDepthData(depthData: any) {\n        const type = \"image/png\";\n        depthData.multiply(64); // Multiply by 2**8 to move it from 16bit to browser-visible 8bit space\n        let buf = depthData.toBase64();\n        this.setState({depthData: `data:${type};base64,`+buf});\n    }\n\n    gotRobotState(state: RobotState) {\n        if (state === undefined) return;\n        // console.log(\"State:\", state);\n        this.robotState = state;\n        if (this.robotState.joints) {\n            \n            this.setState({joints: state.joints, state_machine: state.state_machine});\n        }\n    }\n\n    gotRobotData(data: RobotData) {\n        if (data === undefined) return;\n        // console.log(\"Data:\", data);\n        this.robotData = data;\n    }\n\n    calibrationStart() {\n        this.sendOp(\"ask_for_manual\");\n        this.sendOp(\"calibration/tag_detection\");\n        this.resetTagState();\n        this.setState({isCalibrating: true});\n    }\n\n    canFinishCalibration() {\n        if (!this.state.isCalibrating) return false;\n        const tags = this.state.tagsCalibrated;\n        const unset = Object.keys(tags).filter(t => !tags[t]);\n        return unset.length == 0;\n    }\n    \n    finishCalibration() {\n        this.sendOp(\"calibartion/tag_calibration\");\n        this.sendOp(\"ask_for_idle\");\n        this.resetTagState();\n        this.setState({isCalibrating: false});\n    }\n\n    resetTagState() {\n        let tags = this.state.tagsCalibrated;\n        Object.keys(tags).forEach(t => tags[t] = false);\n        this.setState({tagsCalibrated: tags});\n    }\n    \n    detectCalibrationTags() {\n        this.sendOp(\"calibration/tag_detection\");\n    }\n\n    tagClicked(tag: string) {\n        // Send the command\n        let cmd = new CommandSetTag(Number(tag), this.robotData);\n        this._networkOperator.enqueueCommand(cmd);\n        // Setting this tag as clicked\n        let tags = this.state.tagsCalibrated;\n        tags[tag] = true;\n        this.setState({tagsCalibrated: tags});\n    }\n\n    renderTagButtons() {\n        const tags = Object.keys(this.state.tagsCalibrated);\n        let tagObjs = tags.map(tag => \n            <button onClick={() => this.tagClicked(tag)}\n                    key={tag}\n                    disabled={!this.state.isCalibrating}>\n                {this.state.tagsCalibrated[tag] ? \"Reset\" : \"Tag\"} #{tag}\n            </button>\n        );\n        return (\n            <div className=\"tags\"\n                 style={{gridTemplateColumns: \"repeat(\" + tags.length + \", 1fr)\"}}>\n                {tagObjs}\n            </div>\n        );\n    }\n\n    renderJoints() {\n        if (this.state.joints.length == 0) return undefined;\n        let jointControls = this.state.joints.map((j, i) => \n            <div key={i} className=\"joint-controls \">\n                <div className=\"joint-num\">{i}:</div>\n                <button onClick={() => this.moveJoint(i, -15)}>-15°</button>\n                <button onClick={() => this.moveJoint(i, -5)}>-5°</button>\n                <div className=\"joint-degrees\">{this.radianToDegrees(j).toFixed(2)}°</div>\n                <button onClick={() => this.moveJoint(i, 5)}>+5°</button>\n                <button onClick={() => this.moveJoint(i, 15)}>+15°</button>\n            </div>\n        );\n\n        return (<div>\n            <span>Joints</span>\n            <div className=\"input-container\">\n                {jointControls}\n            </div>\n            </div>\n        );\n    }\n\n    moveJoint(jointNum: number, degrees: number) {\n        // All joint values are sent out in degrees\n        let joints = this.state.joints.map(j => this.radianToDegrees(j));\n        joints[jointNum] += degrees;\n        // joints[jointNum] += this.degreesToRadian(degrees);\n        let cmd = new CommandSetJoints(joints, this.robotData);\n        this._networkOperator.enqueueCommand(cmd);\n        // console.log(joints);\n    }\n\n    radianToDegrees = (rad: number) => rad * 180 / Math.PI;\n    degreesToRadian = (deg: number) => deg * Math.PI / 180;\n\n\n    sendOp = (op: string) => this._networkOperator.enqueueCommand(\n        new CommandBase(op, this.robotData)\n    );\n\n    sendOpClosure = (op: string) => () => this.sendOp(op);\n\n    render() {\n        return (\n            <div className=\"debug-operator-container\">\n                <div className=\"camera-view\">\n                    <img width=\"854\" height=\"480\"\n                         src={this.state.imageData}/>\n                         <div className=\"debug-command-container\" onContextMenu={(e) => {\n                                 e.stopPropagation()\n                                 e.preventDefault()\n                                 return false\n                             }}>\n                             <div className=\"command-input\">\n                                <div className=\"command-input-item\">\n                                    <span>Command name</span>\n                                    <input \n                                        onChange={(e) => {\n                                            this.setState({commandNameInput:e.target.value})\n                                        }}\n                                        value={this.state.commandNameInput}/>\n                                </div>\n                                <div className=\"command-input-item\">\n                                    <span>Command OP</span>\n                                    <input\n                                        value={this.state.commandOpInput}\n                                        onChange={(e) => {\n                                            this.setState({commandOpInput:e.target.value})\n                                        }}\n                                    />\n                                </div>\n                                    <button style={{marginTop:10}} onClick={() => this.addCommand()}>Add command</button>\n                             </div>\n                             <div className=\"command-item-container\">\n                                {this.state.commandList.map(command => \n                                        <div \n                                            id={command.name}\n                                            className=\"command-item\" onClick={() => \n                                                {\n                                                    this._networkOperator.enqueueCommand({op: command.op, source: CommandSettings.getInstance().source + \" \"+ this.state.accessToken})\n                                                }\n                                            }>\n                                            <span>{command.name}</span>\n                                            <div className=\"command-item-icon\" onClick={(ev) => {\n                                                ev.stopPropagation()\n                                                this.removeCommand(command.name)\n                                            }}>\n                                            <svg width={10} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"xmark\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path fill=\"currentColor\" d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\"></path></svg>\n                                            </div>\n                                        </div>\n                                        )\n                                }\n                             </div>\n                         </div>\n                </div>\n                <div className=\"controls\">\n                {/*<span>Connection</span>*/}\n                {/*<div className=\"input-container connection\">\n                    <span>Url:</span>\n                    <input name=\"wsUrl\"\n                           value={this.state.wsUrl}\n                           onChange={(e) => this.connectionSettingChanged(e)}/>\n                    <span>Robot:</span>\n                    <input name=\"robotName\"\n                           value={this.state.robotName} \n                           onChange={(e) => this.connectionSettingChanged(e)}/>\n                    <span>Token:</span>\n                    <input name=\"accessToken\"\n                           value={this.state.accessToken} \n                           onChange={(e) => this.connectionSettingChanged(e)}/>\n                    <button onClick={() => this.disconnect()}\n                            disabled={!this.state.connected}>\n                        Disconnect\n                    </button>\n                    <button onClick={() => this.connect()}\n                            disabled={this.state.connected}>\n                        Connect\n                        </button>\n                </div>*/}\n                <div className=\"operator-buttons\">\n\n                    {this.renderJoints()}\n\n                    <span>Vacuum</span>\n                    <div className=\"input-container vacuum\">\n                        <button onClick={this.sendOpClosure(\"manual_vacuum_on\")}\n                                disabled={!this.state.connected}>\n                            On\n                        </button>\n                        <button onClick={this.sendOpClosure(\"manual_vacuum_off\")}\n                                disabled={!this.state.connected}>\n                            Off\n                        </button>\n                    </div>\n                    <span>Calibration</span>\n                    <div className=\"input-container calibration\">\n                        <div>\n                            <button onClick={() => this.calibrationStart()}\n                                    disabled={!this.state.connected}>\n                                Start calibration\n                            </button>\n                            <button onClick={this.sendOpClosure(\"calibration/tag_detection\")}\n                                    disabled={!this.state.connected}>\n                                Detect tags\n                            </button>\n                        </div>\n                        {this.renderTagButtons()}\n                        <div>\n                            <button onClick={() => this.finishCalibration()}\n                                    disabled={!this.canFinishCalibration()}>\n                                Finish calibration\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"debug-operator-info-container\">\n                        <span>{`FPS: ${this.state.fps.toFixed(2)}`}</span>\n                        <span>{`State: ${this.state.state_machine}`}</span>\n                    </div>\n                </div>\n                <div>\n                    <button className=\"btn-send-home\"\n                            onClick={this.sendOpClosure(\"go_home_safely\")}\n                            disabled={!this.state.connected}>\n                        Send home\n                    </button>\n                </div>\n                <div className=\"depth-view\">\n                    <img width=\"320\" height=\"180\"\n                         src={this.state.depthData}/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}"],"names":["useState","Buffer","useEffect","React","useRef","fit","ReplaySubject","Image","BehaviorSubject","distinctUntilKeyChanged","throttleTime"],"mappings":"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"}