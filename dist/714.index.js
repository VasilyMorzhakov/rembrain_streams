!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.rembrain_streams=t():e.rembrain_streams=t()}(self,(function(){return(()=>{let e=null;const t=(a,s)=>{e&&(e.onopen=()=>{e.send(a)},e.onmessage=async e=>{try{const{data:t}=e;if("object"==typeof t){const e=new Uint8Array(await t.slice(0,1).arrayBuffer())[0];let a=null;if(2===e){const e=new Uint32Array(await t.slice(1,13).arrayBuffer());a=t.slice(9,9+e[0])}else if(1===e){const e=13,s=new Uint32Array(await t.slice(1,e).arrayBuffer());a=t.slice(e,e+s[0])}a&&a.arrayBuffer().then((e=>{const t=new Uint8Array(e);let a="";for(let e=0;e<5;e++){let s=t.length/5;a+=String.fromCharCode.apply(null,t.slice(s*e,s*(e+1)))}const s=btoa(a);postMessage({type:"image",payload:"data:image/jpg;base64,"+s})}))}else postMessage(`Websocket received message: ${t}`)}catch(e){postMessage({type:"error",payload:e})}},e.onclose=o=>{"stay down"!==o.reason?(e=new WebSocket(s),t(a,s)):postMessage({type:"image",payload:null})},e.onerror=e=>{postMessage({type:"error",payload:e})})};return self.addEventListener("message",(({data:a})=>{const{type:s,payload:o,url:r}=a;switch(s){case"open":return e&&e.close(1e3,"stay down"),e=new WebSocket(r),void t(o,r);case"close":return void(e&&(e.close(1e3,"stay down"),e=null))}})),{}})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzE0LmluZGV4LmpzIiwibWFwcGluZ3MiOiJDQUFBLFNBQTJDQSxFQUFNQyxHQUMxQixpQkFBWkMsU0FBMEMsaUJBQVhDLE9BQ3hDQSxPQUFPRCxRQUFVRCxJQUNRLG1CQUFYRyxRQUF5QkEsT0FBT0MsSUFDOUNELE9BQU8sR0FBSUgsR0FDZSxpQkFBWkMsUUFDZEEsUUFBMEIsaUJBQUlELElBRTlCRCxFQUF1QixpQkFBSUMsSUFSN0IsQ0FTR0ssTUFBTSxXQUNULE0sTUNWQSxJQUFJQyxFQUFLLEtBRVQsTUFBTUMsRUFBYyxDQUFDQyxFQUFRQyxLQUN2QkgsSUFDRkEsRUFBR0ksT0FBUyxLQUNWSixFQUFHSyxLQUFLSCxJQUdWRixFQUFHTSxVQUFZQyxNQUFPQyxJQUNwQixJQUNFLE1BQU0sS0FBRUMsR0FBU0QsRUFDakIsR0FBb0IsaUJBQVRDLEVBQW1CLENBQzVCLE1BQU1DLEVBQVcsSUFBSUMsaUJBQ2JGLEVBQUtHLE1BQU0sRUFBRyxHQUFHQyxlQUN2QixHQUNGLElBQUlDLEVBQVksS0FDaEIsR0FBaUIsSUFBYkosRUFBZ0IsQ0FDbEIsTUFBTUssRUFBVSxJQUFJQyxrQkFDWlAsRUFBS0csTUFBTSxFQUFHLElBQUlDLGVBRTFCQyxFQUFZTCxFQUFLRyxNQUFNLEVBQUcsRUFBSUcsRUFBUSxTQUNqQyxHQUFpQixJQUFiTCxFQUFnQixDQUN6QixNQUFNTyxFQUFhLEdBQ2JGLEVBQVUsSUFBSUMsa0JBQ1pQLEVBQUtHLE1BQU0sRUFBR0ssR0FBWUosZUFFbENDLEVBQVlMLEVBQUtHLE1BQU1LLEVBQVlBLEVBQWFGLEVBQVEsSUFFdERELEdBQ0ZBLEVBQVVELGNBQWNLLE1BQU1DLElBQzVCLE1BQ01DLEVBQVEsSUFBSVQsV0FBV1EsR0FJN0IsSUFBSUUsRUFBYSxHQUNqQixJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUFLLENBQzFCLElBQUlDLEVBQUlILEVBQU1JLE9BQVMsRUFDdkJILEdBQWNJLE9BQU9DLGFBQWFDLE1BQ2hDLEtBQ0FQLEVBQU1SLE1BQU1XLEVBQUlELEVBQUdDLEdBQUtELEVBQUksS0FHaEMsTUFBTU0sRUFBTUMsS0FBS1IsR0FHakJTLFlBQVksQ0FBRUMsS0FBTSxRQUFTQyxRQURqQix5QkFBeUJKLFlBTXpDRSxZQUFZLCtCQUErQnJCLEtBRTdDLE1BQU93QixHQUNQSCxZQUFZLENBQUVDLEtBQU0sUUFBU0MsUUFBU0MsTUFHMUNqQyxFQUFHa0MsUUFBVzFCLElBQ00sY0FBZEEsRUFBRzJCLFFBQ0xuQyxFQUFLLElBQUlvQyxVQUFVakMsR0FDbkJGLEVBQVlDLEVBQVFDLElBRXBCMkIsWUFBWSxDQUFFQyxLQUFNLFFBQVNDLFFBQVMsUUFHMUNoQyxFQUFHcUMsUUFBV0osSUFDWkgsWUFBWSxDQUFFQyxLQUFNLFFBQVNDLFFBQVNDLE8sT0FLNUNsQyxLQUFLdUMsaUJBQWlCLFdBQVcsRUFBRzdCLEtBQUFBLE1BQ2xDLE1BQU0sS0FBRXNCLEVBQUksUUFBRUMsRUFBTyxJQUFFN0IsR0FBUU0sRUFDL0IsT0FBUXNCLEdBQ04sSUFBSyxPQU1ILE9BTEkvQixHQUNGQSxFQUFHdUMsTUFBTSxJQUFNLGFBRWpCdkMsRUFBSyxJQUFJb0MsVUFBVWpDLFFBQ25CRixFQUFZK0IsRUFBUzdCLEdBR3ZCLElBQUssUUFLSCxZQUpJSCxJQUNGQSxFQUFHdUMsTUFBTSxJQUFNLGFBQ2Z2QyxFQUFLLFciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW1icmFpbl9zdHJlYW1zL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9yZW1icmFpbl9zdHJlYW1zLy4vc3JjL3N0cmVhbXMvd3N3b3JrZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wicmVtYnJhaW5fc3RyZWFtc1wiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJyZW1icmFpbl9zdHJlYW1zXCJdID0gZmFjdG9yeSgpO1xufSkoc2VsZiwgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwibGV0IHdzID0gbnVsbFxuXG5jb25zdCBzdHJlYW1TdGFydCA9IChwYWNrZXQsIHVybCkgPT4ge1xuICBpZiAod3MpIHtcbiAgICB3cy5vbm9wZW4gPSAoKSA9PiB7XG4gICAgICB3cy5zZW5kKHBhY2tldClcbiAgICB9XG5cbiAgICB3cy5vbm1lc3NhZ2UgPSBhc3luYyAoZXYpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gZXZcbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGNvbnN0IGRhdGFUeXBlID0gbmV3IFVpbnQ4QXJyYXkoXG4gICAgICAgICAgICBhd2FpdCBkYXRhLnNsaWNlKDAsIDEpLmFycmF5QnVmZmVyKClcbiAgICAgICAgICApWzBdXG4gICAgICAgICAgbGV0IGltYWdlQmxvYiA9IG51bGxcbiAgICAgICAgICBpZiAoZGF0YVR5cGUgPT09IDIpIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aHMgPSBuZXcgVWludDMyQXJyYXkoXG4gICAgICAgICAgICAgIGF3YWl0IGRhdGEuc2xpY2UoMSwgMTMpLmFycmF5QnVmZmVyKClcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIGltYWdlQmxvYiA9IGRhdGEuc2xpY2UoOSwgOSArIGxlbmd0aHNbMF0pXG4gICAgICAgICAgfSBlbHNlIGlmIChkYXRhVHlwZSA9PT0gMSkge1xuICAgICAgICAgICAgY29uc3QgSEVBREVSX0VORCA9IDEzXG4gICAgICAgICAgICBjb25zdCBsZW5ndGhzID0gbmV3IFVpbnQzMkFycmF5KFxuICAgICAgICAgICAgICBhd2FpdCBkYXRhLnNsaWNlKDEsIEhFQURFUl9FTkQpLmFycmF5QnVmZmVyKClcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIGltYWdlQmxvYiA9IGRhdGEuc2xpY2UoSEVBREVSX0VORCwgSEVBREVSX0VORCArIGxlbmd0aHNbMF0pXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpbWFnZUJsb2IpIHtcbiAgICAgICAgICAgIGltYWdlQmxvYi5hcnJheUJ1ZmZlcigpLnRoZW4oKHZhbCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCB0eXBlID0gJ2ltYWdlL2pwZydcbiAgICAgICAgICAgICAgY29uc3QgdWludDggPSBuZXcgVWludDhBcnJheSh2YWwpXG4gICAgICAgICAgICAgIC8vIENocm9tZSB0aGlua3MgdGhhdCB1aW50OEFycmF5IGlzIHRvbyBsb25nIHRvIFwiU3RyaW5nLmZyb21DaGFyQ29kZVwiIGl0LFxuICAgICAgICAgICAgICAvLyBzbyBpdCdzIHNsaWNlZCwgc3RyaW5naWZpZWQgYW5kIHRoYW4gY29uY2F0ZWQgYmFja1xuICAgICAgICAgICAgICAvLyBJdCdzIGtpbmRhIGRpc2d1c3RpbmcgYnV0IGl0IHdvcmtzXG4gICAgICAgICAgICAgIGxldCBwcmVidG9hYnVmID0gJydcbiAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgbiA9IHVpbnQ4Lmxlbmd0aCAvIDVcbiAgICAgICAgICAgICAgICBwcmVidG9hYnVmICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoXG4gICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgdWludDguc2xpY2UobiAqIGksIG4gKiAoaSArIDEpKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjb25zdCBidWYgPSBidG9hKHByZWJ0b2FidWYpXG5cbiAgICAgICAgICAgICAgY29uc3Qgc3JjID0gYGRhdGE6JHt0eXBlfTtiYXNlNjQsYCArIGJ1ZlxuICAgICAgICAgICAgICBwb3N0TWVzc2FnZSh7IHR5cGU6ICdpbWFnZScsIHBheWxvYWQ6IHNyYyB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwb3N0TWVzc2FnZShgV2Vic29ja2V0IHJlY2VpdmVkIG1lc3NhZ2U6ICR7ZGF0YX1gKVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgcG9zdE1lc3NhZ2UoeyB0eXBlOiAnZXJyb3InLCBwYXlsb2FkOiBlcnIgfSlcbiAgICAgIH1cbiAgICB9XG4gICAgd3Mub25jbG9zZSA9IChldikgPT4ge1xuICAgICAgaWYgKGV2LnJlYXNvbiAhPT0gJ3N0YXkgZG93bicpIHtcbiAgICAgICAgd3MgPSBuZXcgV2ViU29ja2V0KHVybClcbiAgICAgICAgc3RyZWFtU3RhcnQocGFja2V0LCB1cmwpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwb3N0TWVzc2FnZSh7IHR5cGU6ICdpbWFnZScsIHBheWxvYWQ6IG51bGwgfSlcbiAgICAgIH1cbiAgICB9XG4gICAgd3Mub25lcnJvciA9IChlcnIpID0+IHtcbiAgICAgIHBvc3RNZXNzYWdlKHsgdHlwZTogJ2Vycm9yJywgcGF5bG9hZDogZXJyIH0pXG4gICAgfVxuICB9XG59XG5cbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsICh7IGRhdGEgfSkgPT4ge1xuICBjb25zdCB7IHR5cGUsIHBheWxvYWQsIHVybCB9ID0gZGF0YVxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdvcGVuJzpcbiAgICAgIGlmICh3cykge1xuICAgICAgICB3cy5jbG9zZSgxMDAwLCAnc3RheSBkb3duJylcbiAgICAgIH1cbiAgICAgIHdzID0gbmV3IFdlYlNvY2tldCh1cmwpXG4gICAgICBzdHJlYW1TdGFydChwYXlsb2FkLCB1cmwpXG4gICAgICByZXR1cm5cblxuICAgIGNhc2UgJ2Nsb3NlJzpcbiAgICAgIGlmICh3cykge1xuICAgICAgICB3cy5jbG9zZSgxMDAwLCAnc3RheSBkb3duJylcbiAgICAgICAgd3MgPSBudWxsXG4gICAgICB9XG4gICAgICByZXR1cm5cbiAgfVxufSlcbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwid3MiLCJzdHJlYW1TdGFydCIsInBhY2tldCIsInVybCIsIm9ub3BlbiIsInNlbmQiLCJvbm1lc3NhZ2UiLCJhc3luYyIsImV2IiwiZGF0YSIsImRhdGFUeXBlIiwiVWludDhBcnJheSIsInNsaWNlIiwiYXJyYXlCdWZmZXIiLCJpbWFnZUJsb2IiLCJsZW5ndGhzIiwiVWludDMyQXJyYXkiLCJIRUFERVJfRU5EIiwidGhlbiIsInZhbCIsInVpbnQ4IiwicHJlYnRvYWJ1ZiIsImkiLCJuIiwibGVuZ3RoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYXBwbHkiLCJidWYiLCJidG9hIiwicG9zdE1lc3NhZ2UiLCJ0eXBlIiwicGF5bG9hZCIsImVyciIsIm9uY2xvc2UiLCJyZWFzb24iLCJXZWJTb2NrZXQiLCJvbmVycm9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==